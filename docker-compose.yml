services:
  # ----------- Infra: Redis -----------
  redis:
    image: redis:7.4.5
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - redis-data:/data
    networks: [danipa-net]

  # ----------- Config Server -----------
  config-server:
    build:
      context: ./danipa-config-server
      dockerfile: Dockerfile
    container_name: danipa-config-server
    ports: ["8088:8088"]
    environment:
      SPRING_PROFILES_ACTIVE: native
      SPRING_CONFIG_LOCATION: classpath:/    # keep: prevents /config-repo/*.yml from being read as app config
      # optional basic auth for /actuator/env etc. (matches application.yml defaults)
      CONFIG_USER: cfg-user
      CONFIG_PASS: cfg-pass
      # controls native search locations (optional; matches application-native.yml default)
      SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS: "file:/config-repo,file:/config-repo/danipa-fintech-service,file:/config-repo/danipa-stripe-service,file:/config-repo/danipa-paypal-service"
    volumes:
      - ./config-repo:/config-repo:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8088/actuator/health | grep -q '\"status\":\"UP\"' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 20s
    networks: [danipa-net]
    depends_on:
      redis:
        condition: service_healthy

  # ----------- Eureka Server -----------
  eureka-server:
    build:
      context: ./danipa-eureka-server            # Dockerfile at module root
      dockerfile: Dockerfile
    container_name: danipa-eureka-server
    ports: ["8761:8761"]
    environment:
      JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8761/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 5s
      timeout: 5s
      retries: 24
      start_period: 40s
    networks: [danipa-net]
    depends_on:
      config-server:
        condition: service_healthy

  # ----------- Fintech Service (MoMo) -----------
  fintech-service:
    build:
      context: ./danipa-fintech-service          # Dockerfile at module root
      dockerfile: Dockerfile
    container_name: danipa-fintech-service
    ports: ["8080:8080"]
    environment:
      # Point to Config Server inside the compose network
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8088"
      # If your config repo uses non-main branch:
      # SPRING_CLOUD_CONFIG_LABEL: "${SPRING_CLOUD_CONFIG_LABEL:-main}"

      # Activate environment profile (dev|local|prod)
      SPRING_PROFILES_ACTIVE: "${SPRING_PROFILES_ACTIVE:-dev}"

      # Eureka registration
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka"

      # Redis connection
      SPRING_DATA_REDIS_HOST: "redis"
      SPRING_DATA_REDIS_PORT: "6379"

      # JVM ergonomics in containers (optional)
      JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75"

      # If Config Server has Basic Auth (uncomment to match your config)
      # SPRING_CLOUD_CONFIG_USERNAME: "${CONFIG_USER:-configuser}"
      # SPRING_CLOUD_CONFIG_PASSWORD: "${CONFIG_PASS:-configpass}"
    depends_on:
      eureka-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks: [danipa-net]

volumes:
  redis-data:

networks:
  danipa-net:
    driver: bridge
